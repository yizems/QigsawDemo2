apply plugin: 'groovy'

buildscript {

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
    }
}
applyRootProjectProperties()

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // 这个不能升级
    implementation "com.android.tools.build:gradle:3.4.2"
    implementation "com.iqiyi.android.qigsaw:gradle-plugin:${QIGSAW_VERSION}"
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.4.0'
    implementation gradleApi()

}

sourceSets {
    main {
        groovy {
            srcDir 'src/main/groovy'
        }

        resources {
            srcDir 'src/main/resources'
        }
    }
}

allprojects {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        google()
        mavenCentral()
        jcenter()
    }
}

void applyRootProjectProperties() {
    Properties gradle_properties = new Properties()
    File gradlePropertiesFile = project.rootProject.file('../gradle.properties')
    if (gradlePropertiesFile.exists()) {
        gradle_properties.load(gradlePropertiesFile.newDataInputStream())
    }

    Properties local_properties = new Properties()
    File localGradlePropertiesFile = project.rootProject.file('../../local.properties')
    if (localGradlePropertiesFile.exists()) {
        local_properties.load(localGradlePropertiesFile.newDataInputStream())
    }

    gradle_properties.each { key, value ->
        project.ext[key] = value
    }

    local_properties.each { key, value ->
        project.ext[key] = value
    }
}
